// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package vpciface provides an interface to enable mocking the VirtualPrivateCloud service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package vpciface

import (
	"github.com/polefishu/sdk-builder/sdf"
	"github.com/polefishu/sdk-builder/sdf/request"
	"github.com/polefishu/sdk-builder/service/vpc"
)

// VPCAPI provides an interface to enable mocking the
// vpc.VPC service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // VirtualPrivateCloud.
//    func myFunc(svc vpciface.VPCAPI) bool {
//        // Make svc.CreateSecurityGroup request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := vpc.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockVPCClient struct {
//        vpciface.VPCAPI
//    }
//    func (m *mockVPCClient) CreateSecurityGroup(input *vpc.CreateSecurityGroupInput) (*vpc.CreateSecurityGroupOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockVPCClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type VPCAPI interface {
	CreateSecurityGroup(*vpc.CreateSecurityGroupInput) (*vpc.CreateSecurityGroupOutput, error)
	CreateSecurityGroupWithContext(sdf.Context, *vpc.CreateSecurityGroupInput, ...request.Option) (*vpc.CreateSecurityGroupOutput, error)
	CreateSecurityGroupRequest(*vpc.CreateSecurityGroupInput) (*request.Request, *vpc.CreateSecurityGroupOutput)

	CreateSecurityGroupPolicies(*vpc.CreateSecurityGroupPoliciesInput) (*vpc.CreateSecurityGroupPoliciesOutput, error)
	CreateSecurityGroupPoliciesWithContext(sdf.Context, *vpc.CreateSecurityGroupPoliciesInput, ...request.Option) (*vpc.CreateSecurityGroupPoliciesOutput, error)
	CreateSecurityGroupPoliciesRequest(*vpc.CreateSecurityGroupPoliciesInput) (*request.Request, *vpc.CreateSecurityGroupPoliciesOutput)

	CreateSubnet(*vpc.CreateSubnetInput) (*vpc.CreateSubnetOutput, error)
	CreateSubnetWithContext(sdf.Context, *vpc.CreateSubnetInput, ...request.Option) (*vpc.CreateSubnetOutput, error)
	CreateSubnetRequest(*vpc.CreateSubnetInput) (*request.Request, *vpc.CreateSubnetOutput)

	CreateVpc(*vpc.CreateVpcInput) (*vpc.CreateVpcOutput, error)
	CreateVpcWithContext(sdf.Context, *vpc.CreateVpcInput, ...request.Option) (*vpc.CreateVpcOutput, error)
	CreateVpcRequest(*vpc.CreateVpcInput) (*request.Request, *vpc.CreateVpcOutput)

	DeleteSecurityGroup(*vpc.DeleteSecurityGroupInput) (*vpc.DeleteSecurityGroupOutput, error)
	DeleteSecurityGroupWithContext(sdf.Context, *vpc.DeleteSecurityGroupInput, ...request.Option) (*vpc.DeleteSecurityGroupOutput, error)
	DeleteSecurityGroupRequest(*vpc.DeleteSecurityGroupInput) (*request.Request, *vpc.DeleteSecurityGroupOutput)

	DeleteSecurityGroupPolicies(*vpc.DeleteSecurityGroupPoliciesInput) (*vpc.DeleteSecurityGroupPoliciesOutput, error)
	DeleteSecurityGroupPoliciesWithContext(sdf.Context, *vpc.DeleteSecurityGroupPoliciesInput, ...request.Option) (*vpc.DeleteSecurityGroupPoliciesOutput, error)
	DeleteSecurityGroupPoliciesRequest(*vpc.DeleteSecurityGroupPoliciesInput) (*request.Request, *vpc.DeleteSecurityGroupPoliciesOutput)

	DeleteSubnet(*vpc.DeleteSubnetInput) (*vpc.DeleteSubnetOutput, error)
	DeleteSubnetWithContext(sdf.Context, *vpc.DeleteSubnetInput, ...request.Option) (*vpc.DeleteSubnetOutput, error)
	DeleteSubnetRequest(*vpc.DeleteSubnetInput) (*request.Request, *vpc.DeleteSubnetOutput)

	DeleteVpc(*vpc.DeleteVpcInput) (*vpc.DeleteVpcOutput, error)
	DeleteVpcWithContext(sdf.Context, *vpc.DeleteVpcInput, ...request.Option) (*vpc.DeleteVpcOutput, error)
	DeleteVpcRequest(*vpc.DeleteVpcInput) (*request.Request, *vpc.DeleteVpcOutput)

	DescribeSecurityGroupPolicies(*vpc.DescribeSecurityGroupPoliciesInput) (*vpc.DescribeSecurityGroupPoliciesOutput, error)
	DescribeSecurityGroupPoliciesWithContext(sdf.Context, *vpc.DescribeSecurityGroupPoliciesInput, ...request.Option) (*vpc.DescribeSecurityGroupPoliciesOutput, error)
	DescribeSecurityGroupPoliciesRequest(*vpc.DescribeSecurityGroupPoliciesInput) (*request.Request, *vpc.DescribeSecurityGroupPoliciesOutput)

	DescribeSecurityGroups(*vpc.DescribeSecurityGroupsInput) (*vpc.DescribeSecurityGroupsOutput, error)
	DescribeSecurityGroupsWithContext(sdf.Context, *vpc.DescribeSecurityGroupsInput, ...request.Option) (*vpc.DescribeSecurityGroupsOutput, error)
	DescribeSecurityGroupsRequest(*vpc.DescribeSecurityGroupsInput) (*request.Request, *vpc.DescribeSecurityGroupsOutput)

	DescribeSubnets(*vpc.DescribeSubnetsInput) (*vpc.DescribeSubnetsOutput, error)
	DescribeSubnetsWithContext(sdf.Context, *vpc.DescribeSubnetsInput, ...request.Option) (*vpc.DescribeSubnetsOutput, error)
	DescribeSubnetsRequest(*vpc.DescribeSubnetsInput) (*request.Request, *vpc.DescribeSubnetsOutput)

	DescribeVpcs(*vpc.DescribeVpcsInput) (*vpc.DescribeVpcsOutput, error)
	DescribeVpcsWithContext(sdf.Context, *vpc.DescribeVpcsInput, ...request.Option) (*vpc.DescribeVpcsOutput, error)
	DescribeVpcsRequest(*vpc.DescribeVpcsInput) (*request.Request, *vpc.DescribeVpcsOutput)

	DescribeVpcsPages(*vpc.DescribeVpcsInput, func(*vpc.DescribeVpcsOutput, bool) bool) error
	DescribeVpcsPagesWithContext(sdf.Context, *vpc.DescribeVpcsInput, func(*vpc.DescribeVpcsOutput, bool) bool, ...request.Option) error
}

var _ VPCAPI = (*vpc.VPC)(nil)
